selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + labs(title=tmp_title)+coord_flip()
View(size_ratings)
View(selected_ratings)
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-2
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-1
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + labs(title=tmp_title)+coord_flip()
View(size_ratings)
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + labs(title=tmp_title)+coord_flip()
View(size_ratings)
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + labs(title=tmp_title)+coord_flip()
View(size_ratings)
View(size_ratings)
View(size_ratings)
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity')  + labs(title=tmp_title)+coord_flip()
?stat
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(y = after_stat(count / max(count))))  + labs(title=tmp_title)+coord_flip()
?geom_bar
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(position='fill')  + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(position = position_fill()) + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(aes(y = ..count../sum(..count..))) + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(aes(y = performance/sum(..count..))) + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance/count(performance), fill = size)) + geom_bar() + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance/sum(performance), fill = size)) + geom_bar() + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = sum(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance/sum(performance), fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = mean(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,performance,sum)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
View(size_ratings)
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = mean(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = mean(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
?fct_reorder
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = mean(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=sort(name)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
View(size_ratings)
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = mean(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,sort)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
?mutate
?sort
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = mean(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,order)) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = mean(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings[order('name'),] %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
?arrange
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
selected_ratings['performance'] = 2*as.numeric(cut(
selected_ratings$delty,
breaks = c(-1000,0,1000),
labels = c(-1,+1)
))-3
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(performance = mean(performance, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% arrange(name) %>% ggplot(aes(name,performance, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
