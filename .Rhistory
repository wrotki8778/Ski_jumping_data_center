graph_names = c('kraft stefan','kobayashi ryoyu', 'kasai noriaki', 'granerud halvor egner', 'loitzl wolfgang')
for (name in graph_names){
jumper_id = names[names['name'] == name,2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('cumm_rating', 'id', 'number')]
tmp_title <- paste('Performance graph of: ', name)
graph <- ggplot(filtered_ratings, aes(number, cumm_rating)) + geom_smooth() + geom_line() + labs(title=tmp_title) + xlim(0,2150) + ylim(600,2000)
print(graph)
}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(e1071)
ratings = read.csv('all_ratings.csv',sep=',',dec='.',stringsAsFactors = TRUE)
names = read.csv('all_names.csv',sep=',',dec='.',stringsAsFactors = TRUE)
competitions = read.csv('all_comps_r.csv',sep=',',dec='.',stringsAsFactors = TRUE)
summary(ratings)
graph_names = c('kraft stefan','kobayashi ryoyu', 'kasai noriaki', 'granerud halvor egner', 'loitzl wolfgang')
for (name in graph_names){
jumper_id = names[names['name'] == name,2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('cumm_rating', 'id', 'number')]
tmp_title <- paste('Performance graph of: ', name)
graph <- ggplot(filtered_ratings, aes(number, cumm_rating)) + geom_smooth() + geom_line() + labs(title=tmp_title) + xlim(0,2150) + ylim(600,2000)
print(graph)
}
View(ratings)
graph_names = c('kraft stefan','kobayashi ryoyu', 'kasai noriaki', 'granerud halvor egner', 'loitzl wolfgang')
for (name in graph_names){
jumper_id = names[names['name'] == name,2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('cumm_rating', 'id', 'number')]
tmp_title <- paste('Performance graph of: ', name)
graph <- ggplot(filtered_ratings, aes(number, cumm_rating)) + geom_smooth() + geom_line() + labs(title=tmp_title) + xlim(0,max(ratings['number'])) + ylim(600,2000)
print(graph)
}
max(ratings['number'])
graph_names = c('kraft stefan',
'kubacki dawid',
'kasai noriaki',
'lundby maren')
for (name in graph_names) {
jumper_id = names[names['name'] == name, 2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('delty', 'id', 'number')]
filtered_ratings = merge(filtered_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('delty', 'id', 'meter.value', 'number')]
filtered_ratings['size'] = cut(
filtered_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
filtered_ratings$csum <-
ave(filtered_ratings$delty, filtered_ratings$size, FUN = cumsum)
filtered_ratings = merge(
filtered_ratings,
as.data.frame(table(filtered_ratings$size)),
how = 'left',
by.x = 'size',
by.y = 'Var1'
)
tmp_title <- paste('Performance boxplot by hill of: ', name)
print(ggplot(filtered_ratings, aes(size, delty, fill = size)) + geom_boxplot() + ylim(-20, 20) + labs(title=tmp_title))
tmp_title_2 <- paste('Performance graph by hill type of: ', name)
print(ggplot(filtered_ratings, aes(number, csum, color = size)) + geom_smooth() + geom_line() + labs(title=tmp_title_2)+ xlim(0,max(ratings['number'])) + ylim(-500,1000))
}
View(competitions)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(e1071)
ratings = read.csv('all_ratings.csv',sep=',',dec='.',stringsAsFactors = TRUE)
names = read.csv('all_names.csv',sep=',',dec='.',stringsAsFactors = TRUE)
competitions = read.csv('all_comps_r.csv',sep=',',dec='.',stringsAsFactors = TRUE)
summary(ratings)
graph_names = c('kraft stefan','kobayashi ryoyu', 'kasai noriaki', 'granerud halvor egner', 'loitzl wolfgang')
for (name in graph_names){
jumper_id = names[names['name'] == name,2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('cumm_rating', 'id', 'number')]
tmp_title <- paste('Performance graph of: ', name)
graph <- ggplot(filtered_ratings, aes(number, cumm_rating)) + geom_smooth() + geom_line() + labs(title=tmp_title) + xlim(0,max(ratings['number'])) + ylim(600,2000)
print(graph)
}
graph_names = c('kraft stefan',
'kubacki dawid',
'kasai noriaki',
'lundby maren')
for (name in graph_names) {
jumper_id = names[names['name'] == name, 2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('delty', 'id', 'number')]
filtered_ratings = merge(filtered_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('delty', 'id', 'meter.value', 'number')]
filtered_ratings['size'] = cut(
filtered_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
filtered_ratings$csum <-
ave(filtered_ratings$delty, filtered_ratings$size, FUN = cumsum)
filtered_ratings = merge(
filtered_ratings,
as.data.frame(table(filtered_ratings$size)),
how = 'left',
by.x = 'size',
by.y = 'Var1'
)
tmp_title <- paste('Performance boxplot by hill of: ', name)
print(ggplot(filtered_ratings, aes(size, delty, fill = size)) + geom_boxplot() + ylim(-20, 20) + labs(title=tmp_title))
tmp_title_2 <- paste('Performance graph by hill type of: ', name)
print(ggplot(filtered_ratings, aes(number, csum, color = size)) + geom_smooth() + geom_line() + labs(title=tmp_title_2)+ xlim(0,max(ratings['number'])) + ylim(-500,1000))
}
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1500)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
for (hill_type in levels(size_ratings$size)){
size_ratings_type = filter(size_ratings, size == hill_type & delty > 0)
size_ratings_type = size_ratings_type %>% arrange(desc(delty)) %>% slice(1:15)
tmp_title <- paste('Performance on', hill_type)
print(size_ratings_type %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip())
}
peak_ratings = ratings %>% arrange(desc(cumm_rating)) %>% distinct(codex, .keep_all = TRUE)  %>% slice(1:30)
peak_ratings = merge(peak_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'cumm_rating', 'date', 'codex.x')]
peak_ratings = merge(peak_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
peak_ratings['year'] = sapply(peak_ratings['date'],substring,1,4)
peak_ratings['year'] = sapply(peak_ratings['year'],as.numeric)
tmp_title <- paste('Peak ratings')
peak_ratings %>% mutate(name=fct_reorder(name,cumm_rating,sum)) %>% ggplot(aes(name,cumm_rating, fill=year)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip(ylim = c(1600, 2000))+scale_fill_gradient(low='red',high='green')
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
View(ratings)
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
View(size_ratings)
View(selected_ratings)
graph_names = c('kraft stefan',
'schlierenzauer gregor',
'kasai noriaki',
'lundby maren')
for (name in graph_names) {
jumper_id = names[names['name'] == name, 2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('delty', 'id', 'number')]
filtered_ratings = merge(filtered_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('delty', 'id', 'meter.value', 'number')]
filtered_ratings['size'] = cut(
filtered_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
filtered_ratings$csum <-
ave(filtered_ratings$delty, filtered_ratings$size, FUN = cumsum)
filtered_ratings = merge(
filtered_ratings,
as.data.frame(table(filtered_ratings$size)),
how = 'left',
by.x = 'size',
by.y = 'Var1'
)
tmp_title <- paste('Performance boxplot by hill of: ', name)
print(ggplot(filtered_ratings, aes(size, delty, fill = size)) + geom_boxplot() + ylim(-20, 20) + labs(title=tmp_title))
tmp_title_2 <- paste('Performance graph by hill type of: ', name)
print(ggplot(filtered_ratings, aes(number, csum, color = size)) + geom_smooth() + geom_line() + labs(title=tmp_title_2)+ xlim(0,max(ratings['number'])) + ylim(-500,1000))
}
graph_names = c('kraft stefan',
'kubacki dawid',
'kasai noriaki',
'lundby maren')
for (name in graph_names) {
jumper_id = names[names['name'] == name, 2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('delty', 'id', 'number')]
filtered_ratings = merge(filtered_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('delty', 'id', 'meter.value', 'number')]
filtered_ratings['size'] = cut(
filtered_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
filtered_ratings$csum <-
ave(filtered_ratings$delty, filtered_ratings$size, FUN = cumsum)
filtered_ratings = merge(
filtered_ratings,
as.data.frame(table(filtered_ratings$size)),
how = 'left',
by.x = 'size',
by.y = 'Var1'
)
tmp_title <- paste('Performance boxplot by hill of: ', name)
print(ggplot(filtered_ratings, aes(size, delty, fill = size)) + geom_boxplot() + ylim(-20, 20) + labs(title=tmp_title))
tmp_title_2 <- paste('Performance graph by hill type of: ', name)
print(ggplot(filtered_ratings, aes(number, csum, color = size)) + geom_smooth() + geom_line() + labs(title=tmp_title_2)+ xlim(0,max(ratings['number'])) + ylim(-500,1000))
}
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(delty = sum(delty, na.rm = TRUE))
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1550)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(e1071)
ratings = read.csv('all_ratings.csv',sep=',',dec='.',stringsAsFactors = TRUE)
names = read.csv('all_names.csv',sep=',',dec='.',stringsAsFactors = TRUE)
competitions = read.csv('all_comps_r.csv',sep=',',dec='.',stringsAsFactors = TRUE)
summary(ratings)
graph_names = c('kraft stefan','kobayashi ryoyu', 'kasai noriaki', 'granerud halvor egner', 'loitzl wolfgang')
for (name in graph_names){
jumper_id = names[names['name'] == name,2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('cumm_rating', 'id', 'number')]
tmp_title <- paste('Performance graph of: ', name)
graph <- ggplot(filtered_ratings, aes(number, cumm_rating)) + geom_smooth() + geom_line() + labs(title=tmp_title) + xlim(0,max(ratings['number'])) + ylim(600,2000)
print(graph)
}
graph_names = c('kraft stefan',
'kubacki dawid',
'kasai noriaki',
'lundby maren')
for (name in graph_names) {
jumper_id = names[names['name'] == name, 2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('delty', 'id', 'number')]
filtered_ratings = merge(filtered_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('delty', 'id', 'meter.value', 'number')]
filtered_ratings['size'] = cut(
filtered_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
filtered_ratings$csum <-
ave(filtered_ratings$delty, filtered_ratings$size, FUN = cumsum)
filtered_ratings = merge(
filtered_ratings,
as.data.frame(table(filtered_ratings$size)),
how = 'left',
by.x = 'size',
by.y = 'Var1'
)
tmp_title <- paste('Performance boxplot by hill of: ', name)
print(ggplot(filtered_ratings, aes(size, delty, fill = size)) + geom_boxplot() + ylim(-20, 20) + labs(title=tmp_title))
tmp_title_2 <- paste('Performance graph by hill type of: ', name)
print(ggplot(filtered_ratings, aes(number, csum, color = size)) + geom_smooth() + geom_line() + labs(title=tmp_title_2)+ xlim(0,max(ratings['number'])) + ylim(-500,1000))
}
selected_ids = unique(filter(competitions,season == 2021, gender == 'Men')[['id']])
selected_codex = unique(filter(ratings, id %in% selected_ids & cumm_rating > 1500)[['codex']])
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(selected_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'delty', 'meter.value', 'codex.x')]
selected_ratings['size'] = cut(
selected_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
size_ratings = selected_ratings %>% group_by(size,codex.x) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
size_ratings = merge(size_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
tmp_title <- 'Performance on all types of hills'
size_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill = size)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip()
peak_ratings = ratings %>% arrange(desc(cumm_rating)) %>% distinct(codex, .keep_all = TRUE)  %>% slice(1:30)
peak_ratings = merge(peak_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('id', 'cumm_rating', 'date', 'codex.x')]
peak_ratings = merge(peak_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
peak_ratings['year'] = sapply(peak_ratings['date'],substring,1,4)
peak_ratings['year'] = sapply(peak_ratings['year'],as.numeric)
tmp_title <- paste('Peak ratings')
peak_ratings %>% mutate(name=fct_reorder(name,cumm_rating,sum)) %>% ggplot(aes(name,cumm_rating, fill=year)) + geom_bar(stat='identity') + labs(title=tmp_title)+coord_flip(ylim = c(1600, 2000))+scale_fill_gradient(low='red',high='green')
library(tidyverse)
library(e1071)
ratings = read.csv('all_ratings.csv',sep=',',dec='.',stringsAsFactors = TRUE)
names = read.csv('all_names.csv',sep=',',dec='.',stringsAsFactors = TRUE)
competitions = read.csv('all_comps_r.csv',sep=',',dec='.',stringsAsFactors = TRUE)
competitions = read.csv('all_results.csv',sep=',',dec='.',stringsAsFactors = TRUE)
summary(ratings)
library(tidyverse)
library(e1071)
ratings = read.csv('all_ratings.csv',sep=',',dec='.',stringsAsFactors = TRUE)
names = read.csv('all_names.csv',sep=',',dec='.',stringsAsFactors = TRUE)
competitions = read.csv('all_comps_r.csv',sep=',',dec='.',stringsAsFactors = TRUE)
results = read.csv('all_results.csv',sep=',',dec='.',stringsAsFactors = TRUE)
summary(ratings)
View(results)
View(ratings)
View(ratings)
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(ratings, results, by = c('codex','round','id'))
View(selected_ratings)
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = merge(ratings, results, by = c('codex','round','id'))[['codex','delty','wind']]
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(ratings, results, by = c('codex','round','id'))[['codex','delty','wind']]
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(ratings, results, by = c('codex','round','id'))
View(selected_ratings)
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')]
View(selected_ratings)
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')]
View(selected_ratings)
?cut_interval
?cut
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')]
selected_ratings['wind_type'] = cut(selected_ratings['wind_type'],breaks=c(-10,-1,-0.5,0,0.5,1,10))
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')]
selected_ratings['wind_type'] = cut(selected_ratings['wind'],breaks=c(-10,-1,-0.5,0,0.5,1,10))
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings['wind'],breaks=c(-10,-1,-0.5,0,0.5,1,10))
View(selected_ratings)
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings['wind'], breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
View(selected_ratings)
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
View(selected_ratings)
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
wind_ratings %>% mutate(name=fct_reorder(codex,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
selected_ratings %>% mutate(name=fct_reorder(codex,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
selected_ratings %>% mutate(codex=fct_reorder(codex,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')
View(selected_ratings)
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
selected_ratings = merge(selected_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex.x', by.y='codex')
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
selected_ratings = merge(selected_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex', by.y='codex')
selected_ratings %>% mutate(codex=fct_reorder(codex,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
selected_ratings = merge(selected_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex', by.y='codex')
selected_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
selected_ratings = merge(selected_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex', by.y='codex')
selected_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')+ coord_flip()
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
wind_ratings = selected_ratings %>% group_by(wind_type,codex) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
selected_ratings = merge(selected_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex', by.y='codex')
selected_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')+ coord_flip()
View(wind_ratings)
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
wind_ratings = selected_ratings %>% group_by(wind_type,codex) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
wind_ratings = merge(wind,ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex', by.y='codex')
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
wind_ratings = selected_ratings %>% group_by(wind_type,codex) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
wind_ratings = merge(wind_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex', by.y='codex')
wind_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')+ coord_flip()
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
wind_ratings = selected_ratings %>% group_by(wind_type,codex) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
wind_ratings = merge(wind_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex', by.y='codex')
wind_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')+ coord_flip()+scale_fill_gradient(low='red',high='green')
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10, -1, -0.5, 0, 0.5, 1, 10))
wind_ratings = selected_ratings %>% group_by(wind_type,codex) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
wind_ratings = merge(wind_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex', by.y='codex')
wind_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')+ coord_flip()
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10,0,10))
wind_ratings = selected_ratings %>% group_by(wind_type,codex) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
wind_ratings = merge(wind_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex', by.y='codex')
wind_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')+ coord_flip()
selected_ratings = filter(ratings, codex %in% selected_codex)
selected_ratings = left_join(selected_ratings, results, by = c('codex','round','id'))[,c('codex','delty','wind')] %>% na.omit()
selected_ratings['wind_type'] = cut(selected_ratings$wind, breaks = c(-10,0,10), labels=c('tail','head'))
wind_ratings = selected_ratings %>% group_by(wind_type,codex) %>% summarize(delty = sum(delty, na.rm = TRUE)) %>% na.omit()
wind_ratings = merge(wind_ratings,names[!duplicated(names[,c('codex')]),], how='left', by.x='codex', by.y='codex')
wind_ratings %>% mutate(name=fct_reorder(name,delty,sum)) %>% ggplot(aes(name,delty, fill=wind_type)) + geom_bar(stat='identity')+ coord_flip()
View(peak_ratings)
graph_names = c('kraft stefan',
'kubacki dawid',
'kasai noriaki',
'lundby maren')
for (name in graph_names) {
jumper_id = names[names['name'] == name, 2][1]
filtered_ratings = filter(ratings, codex == jumper_id)[, c('delty', 'id', 'number')]
filtered_ratings = merge(filtered_ratings,
competitions,
by.x = 'id',
by.y = 'id')[, c('delty', 'id', 'meter.value', 'number')]
filtered_ratings['size'] = cut(
filtered_ratings$meter.value,
breaks = c(0, 1.3, 1.9, 2.3, 2.5),
labels = c('flying hill', 'large', 'normal', 'medium')
)
filtered_ratings$csum <-
ave(filtered_ratings$delty, filtered_ratings$size, FUN = cumsum)
filtered_ratings = merge(
filtered_ratings,
as.data.frame(table(filtered_ratings$size)),
how = 'left',
by.x = 'size',
by.y = 'Var1'
)
tmp_title <- paste('Performance boxplot by hill of: ', name)
print(ggplot(filtered_ratings, aes(size, delty, fill = size)) + geom_boxplot() + ylim(-20, 20) + labs(title=tmp_title))
tmp_title_2 <- paste('Performance graph by hill type of: ', name)
print(ggplot(filtered_ratings, aes(number, csum, color = size)) + geom_smooth() + geom_line() + labs(title=tmp_title_2)+ xlim(0,max(ratings['number'])) + ylim(-500,1000))
}
View(ratings)
